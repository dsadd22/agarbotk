{"name":"Agarbotk","tagline":"","body":"// ==UserScript==\r\n// @name        Launcher\r\n// @namespace   AposLauncher\r\n// @include     http://tr.mezdeke.pe.hu/\r\n// @version     1\r\n// @grant       nonefunction saasd() {\r\n  \r\n}\r\n\r\nsaasd.prototype = {\r\n  \r\n};\r\n\r\n// ==/UserScript==\r\n\r\nNumber.prototype.mod = function(n) {\r\n    return ((this%n)+n)%n;\r\n};\r\n\r\nArray.prototype.peek = function() {\r\n    return this[this.length-1];\r\n}\r\n\r\nconsole.log(\"Running Bot Launcher!\");\r\n(function (f, g) {\r\n\r\n\r\n  function keyAction(e) {\r\n    if (84 == e.keyCode) {\r\n      console.log(\"Toggle\");\r\n      toggle = !toggle;\r\n    }\r\n    if (82 == e.keyCode) {\r\n      console.log(\"ToggleDraw\");\r\n      toggleDraw = !toggleDraw;\r\n    }\r\n    if (68 == e.keyCode) {\r\n      f.setDarkTheme(!getDarkBool());\r\n    }\r\n    if (70 == e.keyCode) {\r\n      f.setShowMass(!getMassBool());\r\n    }\r\n  }\r\n\r\n  function humanPlayer() {\r\n    //Don't need to do anything.\r\n  }\r\n\r\n  function Ea() {\r\n\r\n    if (f.botList == null) {\r\n        f.botList = [];\r\n        g('#locationUnknown').append(g('<select id=\"bList\" class=\"form-control\" onchange=\"setBotIndex($(this).val());\" />'));\r\n        g('#locationUnknown').addClass('form-group');\r\n    }\r\n\r\n    f.botList.push([\"Human\", humanPlayer]);\r\n\r\n    var bList = g('#bList');\r\n    g('<option />', {value: (f.botList.length - 1), text: \"Human\"}).appendTo(bList);\r\n\r\n    ea = !0;\r\n    na();\r\n    setInterval(na, 180000);\r\n    A = fa = document.getElementById('canvas');\r\n    e = A.getContext('2d');\r\n    A.onmousedown = function (a) {\r\n      if (oa) {\r\n        var b = a.clientX - (5 + q / 5 / 2),\r\n        c = a.clientY - (5 + q / 5 / 2);\r\n        if (Math.sqrt(b * b + c * c) <= q / 5 / 2) {\r\n          I();\r\n          B(17);\r\n          return\r\n        }\r\n      }\r\n      Q = a.clientX;\r\n      R = a.clientY;\r\n      ga();\r\n      I()\r\n    };\r\n    A.onmousemove = function (a) {\r\n      Q = a.clientX;\r\n      R = a.clientY;\r\n      ga();\r\n    };\r\n    A.onmouseup = function (a) {\r\n    };\r\n    var a = !1,\r\n    b = !1,\r\n    c = !1;\r\n    f.onkeydown = function (d) {\r\n      32 != d.keyCode || a || (I(), B(17), a = !0);\r\n      81 != d.keyCode || b || (B(18), b = !0);\r\n      87 != d.keyCode || c || (I(), B(21), c = !0);\r\n      27 == d.keyCode && pa(!0);\r\n\r\n      keyAction(d);\r\n    };\r\n    f.onkeyup = function (d) {\r\n      32 == d.keyCode && (a = !1);\r\n      87 == d.keyCode && (c = !1);\r\n      81 == d.keyCode && b && (B(19), b = !1)\r\n    };\r\n    f.onblur = function () {\r\n      B(19);\r\n      c = b = a = !1\r\n    };\r\n    f.onresize = qa;\r\n    qa();\r\n    f.requestAnimationFrame ? f.requestAnimationFrame(ra)  : setInterval(ha, 1000 / 60);\r\n    setInterval(I, 40);\r\n    u && g('#region').val(u);\r\n    sa();\r\n    S(g('#region').val());\r\n    null == m && u && T();\r\n    g('#overlays').show()\r\n  }\r\n  function Fa() {\r\n    if (0.5 > h) J = null;\r\n     else {\r\n      for (var a = Number.POSITIVE_INFINITY, b = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, d = Number.NEGATIVE_INFINITY, e = 0, p = 0; p < n.length; p++) n[p].shouldRender() && (e = Math.max(n[p].size, e), a = Math.min(n[p].x, a), b = Math.min(n[p].y, b), c = Math.max(n[p].x, c), d = Math.max(n[p].y, d));\r\n      J = QUAD.init({\r\n        minX: a - (e + 100),\r\n        minY: b - (e + 100),\r\n        maxX: c + (e + 100),\r\n        maxY: d + (e + 100)\r\n      });\r\n      for (p = 0; p < n.length; p++) if (a = n[p], a.shouldRender()) for (b = 0; b < a.points.length; ++b) J.insert(a.points[b])\r\n    }\r\n  }\r\n  function ga() {\r\n    if (toggle) {\r\n        U = (Q - q / 2) / h + s;\r\n        V = (R - r / 2) / h + t;\r\n    }\r\n\r\n  }\r\n  function na() {\r\n    null == W && (W = {\r\n    }, g('#region').children().each(function () {\r\n      var a = g(this),\r\n      b = a.val();\r\n      b && (W[b] = a.text())\r\n    }));\r\n    g.get('http://m.agar.io/info', function (a) {\r\n      var b = {\r\n      },\r\n      c;\r\n      for (c in a.regions) {\r\n        var d = c.split(':') [0];\r\n        b[d] = b[d] || 0;\r\n        b[d] += a.regions[c].numPlayers\r\n      }\r\n      for (c in b) g('#region option[value=\"' + c + '\"]').text(W[c] + ' (' + b[c] + ' players)')\r\n    }, 'json')\r\n  }\r\n  function ta() {\r\n    g('#adsBottom').hide();\r\n    g('#overlays').hide();\r\n    sa()\r\n  }\r\n  function S(a) {\r\n    a && a != u && (g('#region').val() != a && g('#region').val(a), u = f.localStorage.location = a, g('.region-message').hide(), g('.region-message.' + a).show(), g('.btn-needs-server').prop('disabled', !1), ea && T())\r\n  }\r\n  function pa(a) {\r\n    C = null;\r\n    g('#overlays').fadeIn(a ? 200 : 3000);\r\n    a || g('#adsBottom').fadeIn(3000)\r\n  }\r\n  function sa() {\r\n    g('#region').val() ? f.localStorage.location = g('#region').val()  : f.localStorage.location && g('#region').val(f.localStorage.location);\r\n    g('#region').val() ? g('#locationKnown').append(g('#region'))  : g('#locationUnknown').append(g('#region'))\r\n  }\r\n  function ua() {\r\n    console.log('Find ' + u + K);\r\n    g.ajax('http://m.agar.io/', {\r\n      error: function () {\r\n        setTimeout(ua, 1000)\r\n      },\r\n      success: function (a) {\r\n        a = a.split('\\n');\r\n        va('ws://' + a[0])\r\n      },\r\n      dataType: 'text',\r\n      method: 'POST',\r\n      cache: !1,\r\n      crossDomain: !0,\r\n      data: u +\r\n      K || '?'\r\n    })\r\n  }\r\n  function T() {\r\n    ea && u && (g('#connecting').show(), ua())\r\n  }\r\n  function va(a) {\r\n    if (m) {\r\n      m.onopen = null;\r\n      m.onmessage = null;\r\n      m.onclose = null;\r\n      try {\r\n        m.close()\r\n      } catch (b) {\r\n      }\r\n      m = null\r\n    }\r\n    D = [\r\n    ];\r\n    l = [\r\n    ];\r\n    y = {\r\n    };\r\n    n = [\r\n    ];\r\n    E = [\r\n    ];\r\n    z = [\r\n    ];\r\n    v = w = null;\r\n    F = 0;\r\n    console.log('Connecting to ' + a);\r\n    serverIP = a;\r\n    m = new WebSocket(a);\r\n    m.binaryType = 'arraybuffer';\r\n    m.onopen = Ga;\r\n    m.onmessage = Ha;\r\n    m.onclose = Ia;\r\n    m.onerror = function () {\r\n      console.log('socket error')\r\n    }\r\n  }\r\n  function Ga(a) {\r\n    X = 500;\r\n    g('#connecting').hide();\r\n    console.log('socket open');\r\n    a = new ArrayBuffer(5);\r\n    var b = new DataView(a);\r\n    b.setUint8(0, 254);\r\n    b.setUint32(1, 4, !0);\r\n    m.send(a);\r\n    a = new ArrayBuffer(5);\r\n    b = new DataView(a);\r\n    b.setUint8(0, 255);\r\n    b.setUint32(1, 1, !0);\r\n    m.send(a);\r\n    wa()\r\n  }\r\n  function Ia(a) {\r\n    console.log('socket close');\r\n    setTimeout(T, X);\r\n    X *= 1.5\r\n  }\r\n  function Ha(a) {\r\n    function b() {\r\n      for (var a = ''; ; ) {\r\n        var b = d.getUint16(c, !0);\r\n        c += 2;\r\n        if (0 == b) break;\r\n        a += String.fromCharCode(b)\r\n      }\r\n      return a\r\n    }\r\n    var c = 1,\r\n    d = new DataView(a.data);\r\n    switch (d.getUint8(0)) {\r\n      case 16:\r\n        Ja(d);\r\n        break;\r\n      case 17:\r\n        L = d.getFloat32(1, !0);\r\n        M = d.getFloat32(5, !0);\r\n        N = d.getFloat32(9, !0);\r\n        break;\r\n      case 20:\r\n        l = [\r\n        ];\r\n        D = [\r\n        ];\r\n        break;\r\n      case 32:\r\n        D.push(d.getUint32(1, !0));\r\n        break;\r\n      case 49:\r\n        if (null != w) break;\r\n        a = d.getUint32(c, !0);\r\n        c += 4;\r\n        z = [\r\n        ];\r\n        for (var e = 0; e < a; ++e) {\r\n          var p = d.getUint32(c, !0),\r\n          c = c + 4;\r\n          z.push({\r\n            id: p,\r\n            name: b()\r\n          })\r\n        }\r\n        xa();\r\n        break;\r\n      case 50:\r\n        w = [\r\n        ];\r\n        a = d.getUint32(c, !0);\r\n        c += 4;\r\n        for (e = 0; e < a; ++e) w.push(d.getFloat32(c, !0)),\r\n        c += 4;\r\n        xa();\r\n        break;\r\n      case 64:\r\n        Y = d.getFloat64(1, !0),\r\n        Z = d.getFloat64(9, !0),\r\n        $ = d.getFloat64(17, !0),\r\n        aa = d.getFloat64(25, !0),\r\n        L = ($ + Y) / 2,\r\n        M = (aa + Z) / 2,\r\n        N = 1,\r\n        0 == l.length && (s = L, t = M, h = N)\r\n    }\r\n  }\r\n  function Ja(a) {\r\n    G = + new Date;\r\n    var b = Math.random(),\r\n    c = 1;\r\n    ia = !1;\r\n    for (var d = a.getUint16(c, !0), c = c + 2, e = 0; e < d; ++e) {\r\n      var p =\r\n      y[a.getUint32(c, !0)],\r\n      f = y[a.getUint32(c + 4, !0)],\r\n      c = c + 8;\r\n      p && f && (f.destroy(), f.ox = f.x, f.oy = f.y, f.oSize = f.size, f.nx = p.x, f.ny = p.y, f.nSize = f.size, f.updateTime = G)\r\n    }\r\n    for (e = 0; ; ) {\r\n      d = a.getUint32(c, !0);\r\n      c += 4;\r\n      if (0 == d) break;\r\n      ++e;\r\n      var g,\r\n      p = a.getInt16(c, !0),\r\n      c = c + 2,\r\n      f = a.getInt16(c, !0),\r\n      c = c + 2;\r\n      g = a.getInt16(c, !0);\r\n      for (var c = c + 2, h = a.getUint8(c++), m = a.getUint8(c++), q = a.getUint8(c++), h = (h << 16 | m << 8 | q).toString(16); 6 > h.length; ) h = '0' + h;\r\n      var h = '#' + h,\r\n      k = a.getUint8(c++),\r\n      m = !!(k & 1),\r\n      q = !!(k & 16);\r\n      k & 2 && (c += 4);\r\n      k & 4 && (c += 8);\r\n      k & 8 && (c += 16);\r\n      for (var n, k = ''; ; ) {\r\n        n = a.getUint16(c, !0);\r\n        c += 2;\r\n        if (0 == n) break;\r\n        k += String.fromCharCode(n)\r\n      }\r\n      n = k;\r\n      k = null;\r\n      y.hasOwnProperty(d) ? (k = y[d], k.updatePos(), k.ox = k.x, k.oy = k.y, k.oSize = k.size, k.color = h)  : (k = new ya(d, p, f, g, h, n), k.pX = p, k.pY = f);\r\n      k.isVirus = m;\r\n      k.isAgitated = q;\r\n      k.nx = p;\r\n      k.ny = f;\r\n      k.nSize = g;\r\n      k.updateCode = b;\r\n      k.updateTime = G;\r\n      - 1 != D.indexOf(d) && - 1 == l.indexOf(k) && (document.getElementById('overlays').style.display = 'none', l.push(k), 1 == l.length && (s = k.x, t = k.y))\r\n\r\n      interNodes[d] = y[d];\r\n    }\r\n\r\n    Object.keys(interNodes).forEach(function (element, index) {\r\n        //console.log(\"start: \" + interNodes[element].updateTime + \" current: \" + D + \" life: \" + (D - interNodes[element].updateTime));\r\n        var isRemoved = !y.hasOwnProperty(element);\r\n\r\n        if (isRemoved  && (G - interNodes[element].updateTime) > 3000) {\r\n            delete interNodes[element];\r\n        } else if (isRemoved && computeDistance(getOffsetX(), getOffsetY(), interNodes[element].x, interNodes[element].y) < screenDistance()) {\r\n            //console.log(\"Too close! Remove \" + computeDistance(getOffsetX(), getOffsetY(), interNodes[element].x, interNodes[element].y) + \" || \" + screenDistance());\r\n\r\n            delete interNodes[element];\r\n        }\r\n    });\r\n\r\n    b = a.getUint32(c, !0);\r\n    c += 4;\r\n    for (e = 0; e < b; e++) d = a.getUint32(c, !0),\r\n    c += 4,\r\n    k = y[d],\r\n    null != k && k.destroy();\r\n    ia && 0 == l.length && (setNick(originalName), restartPlz = true, console.log(\"Dead\"))\r\n  }\r\n\r\n    function computeDistance(x1, y1, x2, y2) {\r\n        var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!\r\n        var ydis = y1 - y2;\r\n        var distance = Math.sqrt(xdis * xdis + ydis * ydis);\r\n\r\n        return distance;\r\n    }\r\n\r\n    function screenDistance() {\r\n        return Math.min(computeDistance\r\n          (getOffsetX(), getOffsetY(), screenToGameX(getWidth()), getOffsetY()), computeDistance\r\n          (getOffsetX(), getOffsetY(), getOffsetX(), screenToGameY(getHeight())));\r\n    }\r\n\r\n    function screenToGameX(x) {\r\n        return (x - getWidth() / 2) / getRatio() + getX();\r\n    }\r\n\r\n    function screenToGameY(y) {\r\n        return (y - getHeight() / 2) / getRatio() + getY();;\r\n    }\r\n\r\n    f.drawPoint = function(x_1, y_1, drawColor, text) {\r\n        if (!toggleDraw) {\r\n            dPoints.push([x_1, y_1, drawColor]);\r\n            dText.push(text);\r\n        }\r\n    }\r\n\r\n    f.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {\r\n        if (!toggleDraw) {\r\n            var radius = computeDistance(x_1, y_1, x_3, y_3);\r\n            dArc.push([x_1, y_1, x_2, y_2, x_3, y_3, radius, drawColor]);\r\n        }\r\n    }\r\n\r\n    f.drawLine =  function(x_1, y_1, x_2, y_2, drawColor) {\r\n        if (!toggleDraw) {\r\n            lines.push([x_1, y_1, x_2, y_2, drawColor]);\r\n        }\r\n    }\r\n\r\n  function I() {\r\n    if (restartPlz) {\r\n        setNick(originalName);\r\n        restartPlz = false;\r\n    }\r\n\r\n    /*var oldX = getPointX();\r\n    var oldY = getPointY();\r\n\r\n\r\n    if (toggle) {\r\n        setPoint(oldX, oldY);\r\n    }*/\r\n\r\n    if (ja()) {\r\n      var a = Q - q / 2,\r\n      b = R - r / 2;\r\n      64 > a * a + b * b || za == U && Aa == V || (za = U, Aa = V, a = new ArrayBuffer(21), b = new DataView(a), b.setUint8(0, 16), b.setFloat64(1, U, !0), b.setFloat64(9, V, !0), b.setUint32(17, 0, !0), m.send(a))\r\n    }\r\n  }\r\n  function wa() {\r\n    if (ja() && null != C) {\r\n      var a = new ArrayBuffer(1 + 2 * C.length),\r\n      b = new DataView(a);\r\n      b.setUint8(0, 0);\r\n      for (var c = 0; c < C.length; ++c) b.setUint16(1 + 2 * c, C.charCodeAt(c), !0);\r\n      m.send(a)\r\n    }\r\n  }\r\n  function ja() {\r\n    return null != m && m.readyState == m.OPEN\r\n  }\r\n  function B(a) {\r\n    if (ja()) {\r\n      var b = new ArrayBuffer(1);\r\n      (new DataView(b)).setUint8(0, a);\r\n      m.send(b)\r\n    }\r\n  }\r\n  function ra() {\r\n    ha();\r\n    f.requestAnimationFrame(ra)\r\n  }\r\n  function qa() {\r\n    q = f.innerWidth;\r\n    r = f.innerHeight;\r\n    fa.width = A.width = q;\r\n    fa.height = A.height = r;\r\n    ha()\r\n  }\r\n  function Ka() {\r\n    if (0 != l.length) {\r\n      for (var a = 0, b = 0; b < l.length; b++) a += l[b].size;\r\n      a = Math.pow(Math.min(64 / a, 1), 0.4) * Math.max(r / 1080, q / 1920);\r\n      h = (9 * h + a) / 10\r\n    }\r\n  }\r\n  function ha() {\r\n\r\n    dPoints = [];\r\n    dArc = [];\r\n    dText = [];\r\n    lines = [];\r\n\r\n    var a = + new Date;\r\n    ++La;\r\n    G = + new Date;\r\n    if (0 < l.length) {\r\n      Ka();\r\n      for (var b = 0, c = 0, d = 0; d < l.length; d++) l[d].updatePos(),\r\n      b += l[d].x / l.length,\r\n      c += l[d].y / l.length;\r\n      L = b;\r\n      M = c;\r\n      N = h;\r\n      s = (s + b) / 2;\r\n      t = (t + c) / 2\r\n    } else s = (29 * s + L) / 30,\r\n    t = (29 * t + M) / 30,\r\n    h = (9 * h + N) / 10;\r\n    Fa();\r\n    ga();\r\n    e.clearRect(0, 0, q, r);\r\n    e.fillStyle = ka ? '#111111' : '#F2FBFF';\r\n    e.fillRect(0, 0, q, r);\r\n    e.save();\r\n    e.strokeStyle = ka ? '#AAAAAA' : '#000000';\r\n    e.globalAlpha = 0.2;\r\n    e.scale(h, h);\r\n    b = q / h;\r\n    c = r / h;\r\n    for (d = - 0.5 + ( - s + b / 2) % 50; d < b; d += 50) e.beginPath(),\r\n    e.moveTo(d, 0),\r\n    e.lineTo(d, c),\r\n    e.stroke();\r\n    for (d = - 0.5 + ( - t + c / 2) % 50; d < c; d += 50) e.beginPath(),\r\n    e.moveTo(0, d),\r\n    e.lineTo(b, d),\r\n    e.stroke();\r\n    e.restore();\r\n    n.sort(function (a, b) {\r\n      return a.size == b.size ? a.id - b.id : a.size - b.size\r\n    });\r\n    e.save();\r\n    e.translate(q /\r\n    2, r / 2);\r\n    e.scale(h, h);\r\n    e.translate( - s, - t);\r\n    for (d = 0; d < n.length; d++) n[d].draw();\r\n    for (d = 0; d < E.length; d++) E[d].draw();\r\n    if (getPlayer().length > 0) {\r\n        var moveLoc = f.botList[botIndex][1]();\r\n        if (!toggle) {\r\n            setPoint(moveLoc[0], moveLoc[1]);\r\n        }\r\n    }\r\n    customRender(e);\r\n    e.restore();\r\n    v && v.width && e.drawImage(v, q - v.width - 10, 10);\r\n    F = Math.max(F, Ma());\r\n    sessionScore = Math.max(sessionScore, F); \r\n    0 != F && (null == ba && (ba = new ca(24, '#FFFFFF')), ba.setValue('Score: ' + ~~(F / 100) + ' || Best Score: ' + ~~(sessionScore / 100) + \" || Best time alive: \" + bestTime + \" seconds\"), c = ba.render(), b = c.width, e.globalAlpha = 0.2, e.fillStyle = '#000000', e.fillRect(10, r - 10 - 24 - 10, b + 10, 34), e.globalAlpha = 1, e.drawImage(c, 15, r - 10 - 24 - 5));\r\n    Na();\r\n    a = + new Date - a;\r\n    a > 1000 / 60 ? x -= 0.01 : a < 1000 / 65 && (x += 0.01);\r\n    0.4 > x && (x = 0.4);\r\n    1 < x && (x = 1)\r\n\r\n    drawStats(e);\r\n  }\r\n\r\n  function customRender(d) {\r\n    for(var i = 0; i < lines.length; i++) {\r\n        d.beginPath();\r\n\r\n        d.lineWidth = 5;\r\n\r\n        if (lines[i][4] == 0) {\r\n            d.strokeStyle = \"#FF0000\";\r\n        } else if (lines[i][4] == 1) {\r\n            d.strokeStyle = \"#00FF00\";\r\n        } else if (lines[i][4] == 2) {\r\n            d.strokeStyle = \"#0000FF\";\r\n        } else if (lines[i][4] == 3) {\r\n            d.strokeStyle = \"#FF8000\";\r\n        } else if (lines[i][4] == 4) {\r\n            d.strokeStyle = \"#8A2BE2\";\r\n        } else if (lines[i][4] == 5) {\r\n            d.strokeStyle = \"#FF69B4\";\r\n        } else if (lines[i][4] == 6) {\r\n            d.strokeStyle = \"#008080\";\r\n        } else if (lines[i][4] == 7) {\r\n            d.strokeStyle = \"#FFFFFF\";\r\n        } else {\r\n            d.strokeStyle = \"#000000\";\r\n        }\r\n\r\n        d.moveTo(lines[i][0], lines[i][1]);\r\n        d.lineTo(lines[i][2], lines[i][3]);\r\n\r\n        d.stroke();\r\n    }\r\n    d.lineWidth = 1;\r\n\r\n    for(var i = 0; i < dArc.length; i++) {\r\n        if (dArc[i][7] == 0) {\r\n            d.strokeStyle = \"#FF0000\";\r\n        } else if (dArc[i][7] == 1) {\r\n            d.strokeStyle = \"#00FF00\";\r\n        } else if (dArc[i][7] == 2) {\r\n            d.strokeStyle = \"#0000FF\";\r\n        } else if (dArc[i][7] == 3) {\r\n            d.strokeStyle = \"#FF8000\";\r\n        } else if (dArc[i][7] == 4) {\r\n            d.strokeStyle = \"#8A2BE2\";\r\n        } else if (dArc[i][7] == 5) {\r\n            d.strokeStyle = \"#FF69B4\";\r\n        } else if (dArc[i][7] == 6) {\r\n            d.strokeStyle = \"#008080\";\r\n        } else if (dArc[i][7] == 7) {\r\n            d.strokeStyle = \"#FFFFFF\";\r\n        } else {\r\n            d.strokeStyle = \"#000000\";\r\n        }\r\n\r\n        d.beginPath();\r\n\r\n        d.lineWidth = 5;\r\n\r\n        var ang1 = Math.atan2(dArc[i][1] - dArc[i][5], dArc[i][0] - dArc[i][4]);\r\n        var ang2 = Math.atan2(dArc[i][3] - dArc[i][5], dArc[i][2] - dArc[i][4]);\r\n\r\n        d.arc(dArc[i][4], dArc[i][5], dArc[i][6], ang1, ang2, false);\r\n\r\n        d.stroke();\r\n    }\r\n    d.lineWidth = 1;\r\n\r\n    for (var i = 0; i < dPoints.length; i++) {\r\n        if (dText[i] == \"\") {\r\n          var radius = 10;\r\n\r\n          d.beginPath();\r\n          d.arc(dPoints[i][0], dPoints[i][1], radius, 0, 2 * Math.PI, false);\r\n\r\n          if (dPoints[i][2] == 0) {\r\n              d.fillStyle = \"black\";\r\n          } else if (dPoints[i][2] == 1) {\r\n              d.fillStyle = \"yellow\";\r\n          } else if (dPoints[i][2] == 2) {\r\n              d.fillStyle = \"blue\";\r\n          } else if (dPoints[i][2] == 3) {\r\n              d.fillStyle = \"red\";\r\n          } else if (dPoints[i][2] == 4) {\r\n              d.fillStyle = \"#008080\";\r\n          } else if (dPoints[i][2] == 5) {\r\n              d.fillStyle = \"#FF69B4\";\r\n          } else {\r\n              d.fillStyle = \"#000000\";\r\n          }\r\n\r\n          d.fill();\r\n          d.lineWidth = 2;\r\n          d.strokeStyle = '#003300';\r\n          d.stroke();\r\n        } else {\r\n            var text = new ca(18, (getDarkBool() ? '#F2FBFF' : '#111111'));\r\n\r\n            text.setValue(dText[i]);\r\n            var textRender = text.render();\r\n            d.drawImage(textRender, dPoints[i][0], dPoints[i][1]);\r\n        }\r\n\r\n    }\r\n    d.lineWidth = 1;\r\n  }\r\n  function drawStats(d) {\r\n    var currentDate = new Date();\r\n\r\n    var nbSeconds = 0;\r\n    if (getPlayer().length > 0) {\r\n        nbSeconds = (currentDate.getSeconds() + (currentDate.getMinutes() * 60) + (currentDate.getHours() * 60 * 60)) - (lifeTimer.getSeconds() + (lifeTimer.getMinutes() * 60) + (lifeTimer.getHours() * 60 * 60));\r\n    }\r\n\r\n    bestTime = Math.max(nbSeconds, bestTime);\r\n\r\n    var debugStrings = [];\r\n    debugStrings.push(\"T - Bot: \" + (!toggle ? \"On\" : \"Off\"));\r\n    debugStrings.push(\"R - Lines: \" + (!toggleDraw ? \"On\" : \"Off\"));\r\n    debugStrings.push(\"Server: \" + serverIP);\r\n    debugStrings.push(\"Survived for: \" + nbSeconds + \" seconds\");\r\n\r\n    if (getPlayer().length > 0) {\r\n        debugStrings.push(\"Location: \" + Math.floor(getPlayer()[0].x) + \", \" + Math.floor(getPlayer()[0].y));\r\n    }\r\n\r\n    var offsetValue = 20;\r\n    var text = new ca(18, (getDarkBool() ? '#F2FBFF' : '#111111'));\r\n\r\n    for (var i = 0; i < debugStrings.length; i++) {\r\n      text.setValue(debugStrings[i]);\r\n      var textRender = text.render();\r\n      d.drawImage(textRender, 20, offsetValue);\r\n      offsetValue += textRender.height;\r\n    }\r\n  }\r\n\r\n  function Na() {\r\n    if (oa && la.width) {\r\n      var a = q / 5;\r\n      e.drawImage(la, 5, 5, a, a)\r\n    }\r\n  }\r\n  function Ma() {\r\n    for (var a = 0, b = 0; b < l.length; b++) a += l[b].nSize * l[b].nSize;\r\n    return a\r\n  }\r\n  function xa() {\r\n    v = null;\r\n    if (null != w || 0 != z.length) if (null != w || da) {\r\n      v = document.createElement('canvas');\r\n      var a = v.getContext('2d'),\r\n      b = 60,\r\n      b = null == w ? b + 24 * z.length : b + 180,\r\n      c = Math.min(200, 0.3 * q) / 200;\r\n      v.width = 200 * c;\r\n      v.height = b * c;\r\n      a.scale(c, c);\r\n      a.globalAlpha = 0.4;\r\n      a.fillStyle = '#000000';\r\n      a.fillRect(0, 0, 200, b);\r\n      a.globalAlpha = 1;\r\n      a.fillStyle = '#FFFFFF';\r\n      c = null;\r\n      c = 'Leaderboard';\r\n      a.font = '30px Ubuntu';\r\n      a.fillText(c, 100 - a.measureText(c).width /\r\n      2, 40);\r\n      if (null == w) for (a.font = '20px Ubuntu', b = 0; b < z.length; ++b) c = z[b].name || 'An unnamed cell',\r\n      da || (c = 'An unnamed cell'),\r\n      - 1 != D.indexOf(z[b].id) ? (l[0].name && (c = l[0].name), a.fillStyle = '#FFAAAA')  : a.fillStyle = '#FFFFFF',\r\n      c = b + 1 + '. ' + c,\r\n      a.fillText(c, 100 - a.measureText(c).width / 2, 70 + 24 * b);\r\n       else for (b = c = 0; b < w.length; ++b) angEnd = c + w[b] * Math.PI * 2,\r\n      a.fillStyle = Oa[b + 1],\r\n      a.beginPath(),\r\n      a.moveTo(100, 140),\r\n      a.arc(100, 140, 80, c, angEnd, !1),\r\n      a.fill(),\r\n      c = angEnd\r\n    }\r\n  }\r\n  function ya(a, b, c, d, e, f) {\r\n    n.push(this);\r\n    y[a] = this;\r\n    this.id = a;\r\n    this.ox = this.x = b;\r\n    this.oy = this.y = c;\r\n    this.oSize = this.size = d;\r\n    this.color = e;\r\n    this.points = [\r\n    ];\r\n    this.pointsAcc = [\r\n    ];\r\n    this.createPoints();\r\n    this.setName(f)\r\n  }\r\n  function ca(a, b, c, d) { \r\n    a && (this._size = a);\r\n    b && (this._color = b);\r\n    this._stroke = !!c;\r\n    d && (this._strokeColor = d)\r\n  }\r\n  if ('agar.io' != f.location.hostname && 'localhost' != f.location.hostname && '10.10.2.13' != f.location.hostname) f.location = 'http://tr.mezdeke.pe.hu//';\r\n   else if (f.top != f) f.top.location = 'http://tr.mezdeke.pe.hu//';\r\n   else {\r\n    var fa,\r\n    toggle = false,\r\n    toggleDraw = false,\r\n    splitted = false,\r\n    splitting = false,\r\n    virusBait = false,\r\n    tempPoint = [0, 0, 1],\r\n    dPoints = [],\r\n    dArc = [],\r\n    dText = [],\r\n    lines = [],\r\n    originalName,\r\n    sessionScore = 0,\r\n    serverIP = \"\",\r\n    interNodes = [],\r\n    lifeTimer = new Date(),\r\n    bestTime = 0,\r\n    botIndex = 0,\r\n    restartPlz = false,\r\n    e,\r\n    A,\r\n    q,\r\n    r,\r\n    J = null,\r\n    m = null,\r\n    s = 0,\r\n    t = 0,\r\n    D = [\r\n    ],\r\n    l = [\r\n    ],\r\n    y = {\r\n    },\r\n    n = [\r\n    ],\r\n    E = [\r\n    ],\r\n    z = [\r\n    ],\r\n    Q = 0,\r\n    R = 0,\r\n    U = - 1,\r\n    V = - 1,\r\n    La = 0,\r\n    G = 0,\r\n    C = null,\r\n    Y = 0,\r\n    Z = 0,\r\n    $ = 10000,\r\n    aa = 10000,\r\n    h = 1,\r\n    u = null,\r\n    Ba = !0,\r\n    da = !0,\r\n    ma = !1,\r\n    ia = !1,\r\n    F = 0,\r\n    ka = !1,\r\n    Ca = !1,\r\n    L = s = ~~((Y + $) / 2),\r\n    M = t = ~~((Z + aa) / 2),\r\n    N = 1,\r\n    K = '',\r\n    w = null,\r\n    ea = !1,\r\n    O = 0,\r\n    Oa = [\r\n      '#333333',\r\n      '#FF3333',\r\n      '#33FF33',\r\n      '#3333FF'\r\n    ],\r\n    oa = 'ontouchstart' in f && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\r\n    la = new Image;\r\n    la.src = 'img/split.png';\r\n    O = document.createElement('canvas');\r\n    if ('undefined' == typeof console || 'undefined' == typeof DataView || 'undefined' == typeof WebSocket || null == O || null == O.getContext || null == f.localStorage) alert('You browser does not support this game, we recommend you to use Firefox to play this');\r\n     else {\r\n      var W = null;\r\n      f.setNick = function (a) {\r\n        console.log(\"Nick set\");\r\n        lifeTimer = new Date();\r\n        originalName = a;\r\n        ta();\r\n        C = a;\r\n        wa();\r\n        F = 0\r\n      };\r\n      f.setRegion = S;\r\n      f.setSkins = function (a) {\r\n        Ba = a\r\n      };\r\n      f.setNames = function (a) {\r\n        da = a\r\n      };\r\n      f.setDarkTheme = function (a) {\r\n        ka = a\r\n      };\r\n      f.setColors = function (a) {\r\n        ma = a\r\n      };\r\n      f.setShowMass = function (a) {\r\n        Ca = a\r\n      };\r\n      f.spectate = function () {\r\n        C = null;\r\n        B(1);\r\n        ta()\r\n      };\r\n      f.setGameMode = function (a) {\r\n        a != K && (K = a, T())\r\n      };\r\n      null != f.localStorage && (null == f.localStorage.AB8 && (f.localStorage.AB8 = 0 + ~~(100 * Math.random())), O = + f.localStorage.AB8, f.ABGroup = O);\r\n      g.get('http://gc.agar.io', function (a) {\r\n        var b = a.split(' ');\r\n        a = b[0];\r\n        b = b[1] || '';\r\n        - 1 == 'DE IL PL HU BR AT'.split(' ').indexOf(a) && Da.push('nazi');\r\n        P.hasOwnProperty(a) && ('string' == typeof P[a] ? u || S(P[a])  : P[a].hasOwnProperty(b) && (u || S(P[a][b])))\r\n      }, 'text');\r\n      setTimeout(function () {\r\n      }, 300000);\r\n      var P = {\r\n        AF: 'JP-Tokyo',\r\n        AX: 'EU-London',\r\n        AL: 'EU-London',\r\n        DZ: 'EU-London',\r\n        AS: 'SG-Singapore',\r\n        AD: 'EU-London',\r\n        AO: 'EU-London',\r\n        AI: 'US-Atlanta',\r\n        AG: 'US-Atlanta',\r\n        AR: 'BR-Brazil',\r\n        AM: 'JP-Tokyo',\r\n        AW: 'US-Atlanta',\r\n        AU: 'SG-Singapore',\r\n        AT: 'EU-London',\r\n        AZ: 'JP-Tokyo',\r\n        BS: 'US-Atlanta',\r\n        BH: 'JP-Tokyo',\r\n        BD: 'JP-Tokyo',\r\n        BB: 'US-Atlanta',\r\n        BY: 'EU-London',\r\n        BE: 'EU-London',\r\n        BZ: 'US-Atlanta',\r\n        BJ: 'EU-London',\r\n        BM: 'US-Atlanta',\r\n        BT: 'JP-Tokyo',\r\n        BO: 'BR-Brazil',\r\n        BQ: 'US-Atlanta',\r\n        BA: 'EU-London',\r\n        BW: 'EU-London',\r\n        BR: 'BR-Brazil',\r\n        IO: 'JP-Tokyo',\r\n        VG: 'US-Atlanta',\r\n        BN: 'JP-Tokyo',\r\n        BG: 'EU-London',\r\n        BF: 'EU-London',\r\n        BI: 'EU-London',\r\n        KH: 'JP-Tokyo',\r\n        CM: 'EU-London',\r\n        CA: 'US-Atlanta',\r\n        CV: 'EU-London',\r\n        KY: 'US-Atlanta',\r\n        CF: 'EU-London',\r\n        TD: 'EU-London',\r\n        CL: 'BR-Brazil',\r\n        CN: 'CN-China',\r\n        CX: 'JP-Tokyo',\r\n        CC: 'JP-Tokyo',\r\n        CO: 'BR-Brazil',\r\n        KM: 'EU-London',\r\n        CD: 'EU-London',\r\n        CG: 'EU-London',\r\n        CK: 'SG-Singapore',\r\n        CR: 'US-Atlanta',\r\n        CI: 'EU-London',\r\n        HR: 'EU-London',\r\n        CU: 'US-Atlanta',\r\n        CW: 'US-Atlanta',\r\n        CY: 'JP-Tokyo',\r\n        CZ: 'EU-London',\r\n        DK: 'EU-London',\r\n        DJ: 'EU-London',\r\n        DM: 'US-Atlanta',\r\n        DO: 'US-Atlanta',\r\n        EC: 'BR-Brazil',\r\n        EG: 'EU-London',\r\n        SV: 'US-Atlanta',\r\n        GQ: 'EU-London',\r\n        ER: 'EU-London',\r\n        EE: 'EU-London',\r\n        ET: 'EU-London',\r\n        FO: 'EU-London',\r\n        FK: 'BR-Brazil',\r\n        FJ: 'SG-Singapore',\r\n        FI: 'EU-London',\r\n        FR: 'EU-London',\r\n        GF: 'BR-Brazil',\r\n        PF: 'SG-Singapore',\r\n        GA: 'EU-London',\r\n        GM: 'EU-London',\r\n        GE: 'JP-Tokyo',\r\n        DE: 'EU-London',\r\n        GH: 'EU-London',\r\n        GI: 'EU-London',\r\n        GR: 'EU-London',\r\n        GL: 'US-Atlanta',\r\n        GD: 'US-Atlanta',\r\n        GP: 'US-Atlanta',\r\n        GU: 'SG-Singapore',\r\n        GT: 'US-Atlanta',\r\n        GG: 'EU-London',\r\n        GN: 'EU-London',\r\n        GW: 'EU-London',\r\n        GY: 'BR-Brazil',\r\n        HT: 'US-Atlanta',\r\n        VA: 'EU-London',\r\n        HN: 'US-Atlanta',\r\n        HK: 'JP-Tokyo',\r\n        HU: 'EU-London',\r\n        IS: 'EU-London',\r\n        IN: 'JP-Tokyo',\r\n        ID: 'JP-Tokyo',\r\n        IR: 'JP-Tokyo',\r\n        IQ: 'JP-Tokyo',\r\n        IE: 'EU-London',\r\n        IM: 'EU-London',\r\n        IL: 'JP-Tokyo',\r\n        IT: 'EU-London',\r\n        JM: 'US-Atlanta',\r\n        JP: 'JP-Tokyo',\r\n        JE: 'EU-London',\r\n        JO: 'JP-Tokyo',\r\n        KZ: 'JP-Tokyo',\r\n        KE: 'EU-London',\r\n        KI: 'SG-Singapore',\r\n        KP: 'JP-Tokyo',\r\n        KR: 'JP-Tokyo',\r\n        KW: 'JP-Tokyo',\r\n        KG: 'JP-Tokyo',\r\n        LA: 'JP-Tokyo',\r\n        LV: 'EU-London',\r\n        LB: 'JP-Tokyo',\r\n        LS: 'EU-London',\r\n        LR: 'EU-London',\r\n        LY: 'EU-London',\r\n        LI: 'EU-London',\r\n        LT: 'EU-London',\r\n        LU: 'EU-London',\r\n        MO: 'JP-Tokyo',\r\n        MK: 'EU-London',\r\n        MG: 'EU-London',\r\n        MW: 'EU-London',\r\n        MY: 'JP-Tokyo',\r\n        MV: 'JP-Tokyo',\r\n        ML: 'EU-London',\r\n        MT: 'EU-London',\r\n        MH: 'SG-Singapore',\r\n        MQ: 'US-Atlanta',\r\n        MR: 'EU-London',\r\n        MU: 'EU-London',\r\n        YT: 'EU-London',\r\n        MX: 'US-Atlanta',\r\n        FM: 'SG-Singapore',\r\n        MD: 'EU-London',\r\n        MC: 'EU-London',\r\n        MN: 'JP-Tokyo',\r\n        ME: 'EU-London',\r\n        MS: 'US-Atlanta',\r\n        MA: 'EU-London',\r\n        MZ: 'EU-London',\r\n        MM: 'JP-Tokyo',\r\n        NA: 'EU-London',\r\n        NR: 'SG-Singapore',\r\n        NP: 'JP-Tokyo',\r\n        NL: 'EU-London',\r\n        NC: 'SG-Singapore',\r\n        NZ: 'SG-Singapore',\r\n        NI: 'US-Atlanta',\r\n        NE: 'EU-London',\r\n        NG: 'EU-London',\r\n        NU: 'SG-Singapore',\r\n        NF: 'SG-Singapore',\r\n        MP: 'SG-Singapore',\r\n        NO: 'EU-London',\r\n        OM: 'JP-Tokyo',\r\n        PK: 'JP-Tokyo',\r\n        PW: 'SG-Singapore',\r\n        PS: 'JP-Tokyo',\r\n        PA: 'US-Atlanta',\r\n        PG: 'SG-Singapore',\r\n        PY: 'BR-Brazil',\r\n        PE: 'BR-Brazil',\r\n        PH: 'JP-Tokyo',\r\n        PN: 'SG-Singapore',\r\n        PL: 'EU-London',\r\n        PT: 'EU-London',\r\n        PR: 'US-Atlanta',\r\n        QA: 'JP-Tokyo',\r\n        RE: 'EU-London',\r\n        RO: 'EU-London',\r\n        RU: 'RU-Russia',\r\n        RW: 'EU-London',\r\n        BL: 'US-Atlanta',\r\n        SH: 'EU-London',\r\n        KN: 'US-Atlanta',\r\n        LC: 'US-Atlanta',\r\n        MF: 'US-Atlanta',\r\n        PM: 'US-Atlanta',\r\n        VC: 'US-Atlanta',\r\n        WS: 'SG-Singapore',\r\n        SM: 'EU-London',\r\n        ST: 'EU-London',\r\n        SA: 'EU-London',\r\n        SN: 'EU-London',\r\n        RS: 'EU-London',\r\n        SC: 'EU-London',\r\n        SL: 'EU-London',\r\n        SG: 'JP-Tokyo',\r\n        SX: 'US-Atlanta',\r\n        SK: 'EU-London',\r\n        SI: 'EU-London',\r\n        SB: 'SG-Singapore',\r\n        SO: 'EU-London',\r\n        ZA: 'EU-London',\r\n        SS: 'EU-London',\r\n        ES: 'EU-London',\r\n        LK: 'JP-Tokyo',\r\n        SD: 'EU-London',\r\n        SR: 'BR-Brazil',\r\n        SJ: 'EU-London',\r\n        SZ: 'EU-London',\r\n        SE: 'EU-London',\r\n        CH: 'EU-London',\r\n        SY: 'EU-London',\r\n        TW: 'JP-Tokyo',\r\n        TJ: 'JP-Tokyo',\r\n        TZ: 'EU-London',\r\n        TH: 'JP-Tokyo',\r\n        TL: 'JP-Tokyo',\r\n        TG: 'EU-London',\r\n        TK: 'SG-Singapore',\r\n        TO: 'SG-Singapore',\r\n        TT: 'US-Atlanta',\r\n        TN: 'EU-London',\r\n        TR: 'TK-Turkey',\r\n        TM: 'JP-Tokyo',\r\n        TC: 'US-Atlanta',\r\n        TV: 'SG-Singapore',\r\n        UG: 'EU-London',\r\n        UA: 'EU-London',\r\n        AE: 'EU-London',\r\n        GB: 'EU-London',\r\n        US: {\r\n          AL: 'US-Atlanta',\r\n          AK: 'US-Fremont',\r\n          AZ: 'US-Fremont',\r\n          AR: 'US-Atlanta',\r\n          CA: 'US-Fremont',\r\n          CO: 'US-Fremont',\r\n          CT: 'US-Atlanta',\r\n          DE: 'US-Atlanta',\r\n          FL: 'US-Atlanta',\r\n          GA: 'US-Atlanta',\r\n          HI: 'US-Fremont',\r\n          ID: 'US-Fremont',\r\n          IL: 'US-Atlanta',\r\n          IN: 'US-Atlanta',\r\n          IA: 'US-Atlanta',\r\n          KS: 'US-Atlanta',\r\n          KY: 'US-Atlanta',\r\n          LA: 'US-Atlanta',\r\n          ME: 'US-Atlanta',\r\n          MD: 'US-Atlanta',\r\n          MA: 'US-Atlanta',\r\n          MI: 'US-Atlanta',\r\n          MN: 'US-Fremont',\r\n          MS: 'US-Atlanta',\r\n          MO: 'US-Atlanta',\r\n          MT: 'US-Fremont',\r\n          NE: 'US-Fremont',\r\n          NV: 'US-Fremont',\r\n          NH: 'US-Atlanta',\r\n          NJ: 'US-Atlanta',\r\n          NM: 'US-Fremont',\r\n          NY: 'US-Atlanta',\r\n          NC: 'US-Atlanta',\r\n          ND: 'US-Fremont',\r\n          OH: 'US-Atlanta',\r\n          OK: 'US-Atlanta',\r\n          OR: 'US-Fremont',\r\n          PA: 'US-Atlanta',\r\n          RI: 'US-Atlanta',\r\n          SC: 'US-Atlanta',\r\n          SD: 'US-Fremont',\r\n          TN: 'US-Atlanta',\r\n          TX: 'US-Atlanta',\r\n          UT: 'US-Fremont',\r\n          VT: 'US-Atlanta',\r\n          VA: 'US-Atlanta',\r\n          WA: 'US-Fremont',\r\n          WV: 'US-Atlanta',\r\n          WI: 'US-Atlanta',\r\n          WY: 'US-Fremont',\r\n          DC: 'US-Atlanta',\r\n          AS: 'US-Atlanta',\r\n          GU: 'US-Atlanta',\r\n          MP: 'US-Atlanta',\r\n          PR: 'US-Atlanta',\r\n          UM: 'US-Atlanta',\r\n          VI: 'US-Atlanta'\r\n        },\r\n        UM: 'SG-Singapore',\r\n        VI: 'US-Atlanta',\r\n        UY: 'BR-Brazil',\r\n        UZ: 'JP-Tokyo',\r\n        VU: 'SG-Singapore',\r\n        VE: 'BR-Brazil',\r\n        VN: 'JP-Tokyo',\r\n        WF: 'SG-Singapore',\r\n        EH: 'EU-London',\r\n        YE: 'JP-Tokyo',\r\n        ZM: 'EU-London',\r\n        ZW: 'EU-London'\r\n      };\r\n      f.connect = va;\r\n\r\n      f.getDarkBool = function() {\r\n        return ka;\r\n      }\r\n      f.getMassBool = function() {\r\n        return Ca;\r\n      }\r\n\r\n      f.getMemoryCells = function() {\r\n        return interNodes;\r\n      }\r\n\r\n      f.getCellsArray = function() {\r\n        return n;\r\n      }\r\n\r\n      f.getCells = function() {\r\n        return y;\r\n      }\r\n\r\n      f.getPlayer = function() {\r\n        return l;\r\n      }\r\n\r\n      f.getWidth = function() {\r\n        return q;\r\n      }\r\n\r\n      f.getHeight = function() {\r\n        return r;\r\n      }\r\n\r\n      f.getRatio = function() {\r\n        return h;\r\n      }\r\n\r\n      f.getOffsetX = function() {\r\n        return L;\r\n      }\r\n\r\n      f.getOffsetY = function() {\r\n        return M;\r\n      }\r\n\r\n      f.getX = function() {\r\n        return s;\r\n      }\r\n\r\n      f.getY = function() {\r\n        return t;\r\n      }\r\n\r\n      f.getPointX = function() {\r\n        return U;\r\n      }\r\n\r\n      f.getPointY = function() {\r\n        return V;\r\n      }\r\n\r\n      f.getMouseX = function() {\r\n        return Q;\r\n      }\r\n\r\n      f.getMouseY = function() {\r\n        return R;\r\n      }\r\n\r\n      f.getScreenDistance = function() {\r\n        var temp = screenDistance();\r\n        return temp;\r\n      }\r\n      f.getLastUpdate = function() {\r\n        return G;\r\n      }\r\n\r\n      f.setPoint = function(x, y) {\r\n        U = x;\r\n        V = y;\r\n      }\r\n\r\n      f.createFake = function(a, b, c, d, e, f) {\r\n        var n = new ya(a, b, c, d, e, f);\r\n        return n;\r\n      }\r\n\r\n      f.setScore = function(a) {\r\n        sessionScore = a * 100;\r\n      }\r\n\r\n      f.setBestTime = function(a) {\r\n        bestTime = a;\r\n      }\r\n\r\n      f.best = function(a, b) {\r\n        setScore(a);\r\n        setBestTime(b);\r\n      }\r\n\r\n      f.setBotIndex = function(a) {\r\n        console.log(\"Changing bot\");\r\n        botIndex = a;\r\n      }\r\n\r\n      var X = 500,\r\n      za = - 1,\r\n      Aa = - 1,\r\n      v = null,\r\n      x = 1,\r\n      ba = null,\r\n      H = {\r\n      },\r\n      Da = 'poland;usa;china;russia;canada;australia;spain;brazil;germany;ukraine;france;sweden;hitler;north korea;south korea;japan;united kingdom;earth;greece;latvia;lithuania;estonia;finland;norway;cia;maldivas;austria;nigeria;reddit;yaranaika;confederate;9gag;indiana;4chan;italy;ussr;bulgaria;tumblr;2ch.hk;hong kong;portugal;jamaica;german empire;mexico;sanik;switzerland;croatia;chile;indonesia;bangladesh;thailand;iran;iraq;peru;moon;botswana;bosnia;netherlands;european union;taiwan;pakistan;hungary;satanist;qing dynasty;matriarchy;patriarchy;feminism;ireland;texas;facepunch;prodota;cambodia;steam;piccolo;ea;india;kc;denmark;quebec;ayy lmao;sealand;bait;tsarist russia;origin;vinesauce;stalin;belgium;luxembourg;stussy;prussia;8ch;argentina;scotland;sir;romania;belarus;wojak;doge;nasa;byzantium;imperial japan;french kingdom;somalia;turkey;mars;pokerface;8'.split(';'),\r\n      Pa = [\r\n        '8',\r\n        'nasa'\r\n      ],\r\n      Qa = [\r\n        'm\\'blob'\r\n      ];\r\n      ya.prototype = {\r\n        id: 0,\r\n        points: null,\r\n        pointsAcc: null,\r\n        name: null,\r\n        nameCache: null,\r\n        sizeCache: null,\r\n        x: 0,\r\n        y: 0,\r\n        size: 0,\r\n        ox: 0,\r\n        oy: 0,\r\n        oSize: 0,\r\n        nx: 0,\r\n        ny: 0,\r\n        nSize: 0,\r\n        updateTime: 0,\r\n        updateCode: 0,\r\n        drawTime: 0,\r\n        destroyed: !1,\r\n        isVirus: !1,\r\n        isAgitated: !1,\r\n        wasSimpleDrawing: !0,\r\n        destroy: function () {\r\n          var a;\r\n          for (a = 0; a < n.length; a++) if (n[a] == this) {\r\n            n.splice(a, 1);\r\n            break\r\n          }\r\n          delete y[this.id];\r\n          a = l.indexOf(this);\r\n          - 1 != a && (ia = !0, l.splice(a, 1));\r\n          a = D.indexOf(this.id);\r\n          - 1 != a && D.splice(a, 1);\r\n          this.destroyed = !0;\r\n          E.push(this)\r\n        },\r\n        getNameSize: function () {\r\n          return Math.max(~~(0.3 * this.size), 24)\r\n        },\r\n        setName: function (a) {\r\n          if (this.name = a) null == this.nameCache ? this.nameCache = new ca(this.getNameSize(), '#FFFFFF', !0, '#000000')  : this.nameCache.setSize(this.getNameSize()),\r\n          this.nameCache.setValue(this.name)\r\n        },\r\n        createPoints: function () {\r\n          for (var a = this.getNumPoints(); this.points.length > a; ) {\r\n            var b = ~~(Math.random() * this.points.length);\r\n            this.points.splice(b, 1);\r\n            this.pointsAcc.splice(b, 1)\r\n          }\r\n          0 == this.points.length && 0 < a && (this.points.push({\r\n            c: this,\r\n            v: this.size,\r\n            x: this.x,\r\n            y: this.y\r\n          }), this.pointsAcc.push(Math.random() - 0.5));\r\n          for (; this.points.length < a; ) {\r\n            var b = ~~(Math.random() * this.points.length),\r\n            c = this.points[b];\r\n            this.points.splice(b, 0, {\r\n              c: this,\r\n              v: c.v,\r\n              x: c.x,\r\n              y: c.y\r\n            });\r\n            this.pointsAcc.splice(b, 0, this.pointsAcc[b])\r\n          }\r\n        },\r\n        getNumPoints: function () {\r\n          var a = 10;\r\n          20 > this.size && (a = 5);\r\n          this.isVirus && (a = 30);\r\n          return ~~Math.max(this.size * h * (this.isVirus ? Math.min(2 * x, 1)  : x), a)\r\n        },\r\n        movePoints: function () {\r\n          this.createPoints();\r\n          for (var a = this.points, b = this.pointsAcc, c = a.length, d = 0; d < c; ++d) {\r\n            var e = b[(d - 1 + c) % c],\r\n            f = b[(d + 1) % c];\r\n            b[d] += (Math.random() - 0.5) * (this.isAgitated ? 3 : 1);\r\n            b[d] *= 0.7;\r\n            10 < b[d] && (b[d] = 10);\r\n            - 10 > b[d] && (b[d] = - 10);\r\n            b[d] = (e + f + 8 * b[d]) / 10\r\n          }\r\n          for (var h = this, d = 0; d < c; ++d) {\r\n            var g = a[d].v,\r\n            e = a[(d - 1 + c) % c].v,\r\n            f = a[(d + 1) % c].v;\r\n            if (15 < this.size && null != J) {\r\n              var l = !1,\r\n              m = a[d].x,\r\n              n = a[d].y;\r\n              J.retrieve2(m - 5, n - 5, 10, 10, function (a) {\r\n                a.c != h && 25 > (m - a.x) * (m - a.x) + (n - a.y) * (n - a.y) && (l = !0)\r\n              });\r\n              !l && (a[d].x < Y || a[d].y < Z || a[d].x > $ || a[d].y > aa) && (l = !0);\r\n              l && (0 < b[d] && (b[d] = 0), b[d] -= 1)\r\n            }\r\n            g += b[d];\r\n            0 > g && (g = 0);\r\n            g = this.isAgitated ? (19 * g + this.size) / 20 : (12 * g + this.size) / 13;\r\n            a[d].v = (e + f + 8 * g) / 10;\r\n            e = 2 * Math.PI / c;\r\n            f = this.points[d].v;\r\n            this.isVirus && 0 == d % 2 && (f += 5);\r\n            a[d].x = this.x + Math.cos(e * d) * f;\r\n            a[d].y = this.y + Math.sin(e * d) * f\r\n          }\r\n        },\r\n        updatePos: function () {\r\n          var temp = - 1 != l.indexOf(this);\r\n\r\n          var a;\r\n          a = (G - this.updateTime) / 120;\r\n          a = 0 > a ? 0 : 1 < a ? 1 : a;\r\n          var b = 0 > a ? 0 : 1 < a ? 1 : a;\r\n          this.getNameSize();\r\n          if (this.destroyed && 1 <= b) {\r\n            var c = E.indexOf(this);\r\n            - 1 != c && E.splice(c, 1)\r\n          }\r\n          this.x = a * (this.nx - this.ox) + this.ox;\r\n          this.y = a * (this.ny - this.oy) + this.oy;\r\n          this.size = b * (this.nSize - this.oSize) + this.oSize;\r\n          return b\r\n        },\r\n        shouldRender: function () {\r\n          return this.x + this.size + 40 < s - q / 2 / h || this.y + this.size + 40 < t - r / 2 / h || this.x - this.size - 40 >\r\n          s + q / 2 / h || this.y - this.size - 40 > t + r / 2 / h ? !1 : !0\r\n        },\r\n        draw: function () {\r\n          if (this.shouldRender()) {\r\n            var a = !this.isVirus && !this.isAgitated && 0.5 > h;\r\n            if (this.wasSimpleDrawing && !a) for (var b = 0; b < this.points.length; b++) this.points[b].v = this.size;\r\n            this.wasSimpleDrawing = a;\r\n            e.save();\r\n            this.drawTime = G;\r\n            b = this.updatePos();\r\n            this.destroyed && (e.globalAlpha *= 1 - b);\r\n            e.lineWidth = 10;\r\n            e.lineCap = 'round';\r\n            e.lineJoin = this.isVirus ? 'mitter' : 'round';\r\n            ma ? (e.fillStyle = '#FFFFFF', e.strokeStyle = '#AAAAAA')  : (e.fillStyle = this.color, e.strokeStyle = this.color);\r\n            if (a) e.beginPath(),\r\n            e.arc(this.x, this.y, this.size, 0, 2 * Math.PI, !1);\r\n             else {\r\n              this.movePoints();\r\n              e.beginPath();\r\n              var c = this.getNumPoints();\r\n              e.moveTo(this.points[0].x, this.points[0].y);\r\n              for (b = 1; b <= c; ++b) {\r\n                var d = b % c;\r\n                e.lineTo(this.points[d].x, this.points[d].y)\r\n              }\r\n            }\r\n            e.closePath();\r\n            c = this.name.toLowerCase();\r\n            !this.isAgitated && Ba && '' == K ? - 1 != Da.indexOf(c) ? (H.hasOwnProperty(c) || (H[c] = new Image, H[c].src = 'skins/' + c + '.png'), b = 0 != H[c].width && H[c].complete ? H[c] : null)  : b = null : b = null;\r\n            b = (d = b) ? - 1 != Qa.indexOf(c)  : !1;\r\n            a || e.stroke();\r\n            e.fill();\r\n            null == d || b || (e.save(), e.clip(), e.drawImage(d, this.x - this.size, this.y - this.size, 2 * this.size, 2 * this.size), e.restore());\r\n            (ma || 15 < this.size) && !a && (e.strokeStyle = '#000000', e.globalAlpha *= 0.1, e.stroke());\r\n            e.globalAlpha = 1;\r\n            null != d && b && e.drawImage(d, this.x - 2 * this.size, this.y - 2 * this.size, 4 * this.size, 4 * this.size);\r\n            b = - 1 != l.indexOf(this);\r\n            a = ~~this.y;\r\n            if ((da || b) && this.name && this.nameCache && (null == d || - 1 == Pa.indexOf(c))) {\r\n              d = this.nameCache;\r\n              d.setValue(this.name);\r\n              d.setSize(this.getNameSize());\r\n              c = Math.ceil(10 * h) / 10;\r\n              d.setScale(c);\r\n              var d = d.render(),\r\n              f = ~~(d.width / c),\r\n              g = ~~(d.height / c);\r\n              e.drawImage(d, ~~this.x - ~~(f / 2), a - ~~(g / 2), f, g);\r\n              a += d.height / 2 / c + 4\r\n            }\r\n\r\n            /*if (b) {\r\n              var radius = 20;\r\n\r\n              e.beginPath();\r\n              e.arc(this.x, this.y, radius, 0, 2 * Math.PI, false);\r\n              e.fillStyle = \"blue\";\r\n\r\n              e.fill();\r\n              e.lineWidth = 2;\r\n              e.strokeStyle = '#003300';\r\n              e.stroke();\r\n            }*/\r\n\r\n            Ca && (b || 0 == l.length && (!this.isVirus || this.isAgitated) && 20 < this.size) && (null == this.sizeCache && (this.sizeCache = new ca(this.getNameSize() / 2, '#FFFFFF', !0, '#000000')), b = this.sizeCache, b.setSize(this.getNameSize() / 2), b.setValue(~~(this.size * this.size / 100)), c = Math.ceil(10 * h) / 10, b.setScale(c), d = b.render(), f = ~~(d.width / c), g = ~~(d.height / c), e.drawImage(d, ~~this.x - ~~(f / 2), a - ~~(g / 2), f, g));\r\n            e.restore()\r\n          }\r\n        }\r\n      };\r\n      ca.prototype = {\r\n        _value: '',\r\n        _color: '#000000',\r\n        _stroke: !1,\r\n        _strokeColor: '#000000',\r\n        _size: 16,\r\n        _canvas: null,\r\n        _ctx: null,\r\n        _dirty: !1,\r\n        _scale: 1,\r\n        setSize: function (a) {\r\n          this._size != a && (this._size = a, this._dirty = !0)\r\n        },\r\n        setScale: function (a) {\r\n          this._scale != a && (this._scale = a, this._dirty = !0)\r\n        },\r\n        setColor: function (a) {\r\n          this._color != a && (this._color = a, this._dirty = !0)\r\n        },\r\n        setStroke: function (a) {\r\n          this._stroke != a && (this._stroke = a, this._dirty = !0)\r\n        },\r\n        setStrokeColor: function (a) {\r\n          this._strokeColor != a && (this._strokeColor = a, this._dirty = !0)\r\n        },\r\n        setValue: function (a) {\r\n          a != this._value && (this._value = a, this._dirty = !0)\r\n        },\r\n        render: function () {\r\n          null == this._canvas && (this._canvas = document.createElement('canvas'), this._ctx = this._canvas.getContext('2d'));\r\n          if (this._dirty) {\r\n            this._dirty = !1;\r\n            var a = this._canvas,\r\n            b = this._ctx,\r\n            c = this._value,\r\n            d = this._scale,\r\n            e = this._size,\r\n            f = e + 'px Ubuntu';\r\n            b.font = f;\r\n            var g = b.measureText(c).width,\r\n            h = ~~(0.2 * e);\r\n            a.width = (g + 6) * d;\r\n            a.height = (e + h) * d;\r\n            b.font = f;\r\n            b.scale(d, d);\r\n            b.globalAlpha = 1;\r\n            b.lineWidth = 3;\r\n            b.strokeStyle = this._strokeColor;\r\n            b.fillStyle = this._color;\r\n            this._stroke && b.strokeText(c, 3, e - h / 2);\r\n            b.fillText(c, 3, e - h / 2)\r\n          }\r\n          return this._canvas\r\n        }\r\n      };\r\n      f.onload = Ea\r\n    }\r\n  }\r\n}) (window, jQuery);\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}